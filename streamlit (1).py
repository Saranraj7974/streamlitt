# -*- coding: utf-8 -*-
"""streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kowrNVoBGpG78iy9wNadJ9-6Vo5PVMJN
"""

import streamlit as st
import yfinance as yf
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime

# -----------------------------
# NIFTY 50 Tickers
# -----------------------------
nifty50_tickers = [
    "RELIANCE.NS", "TCS.NS", "INFY.NS", "HDFCBANK.NS", "ICICIBANK.NS",
    "HINDUNILVR.NS", "ITC.NS", "LT.NS", "SBIN.NS", "KOTAKBANK.NS",
    "AXISBANK.NS", "ASIANPAINT.NS", "BAJFINANCE.NS", "BHARTIARTL.NS",
    "HCLTECH.NS", "SUNPHARMA.NS", "MARUTI.NS", "NTPC.NS", "TITAN.NS",
    "ULTRACEMCO.NS", "WIPRO.NS", "TECHM.NS", "POWERGRID.NS", "NESTLEIND.NS",
    "JSWSTEEL.NS", "TATASTEEL.NS", "ADANIENT.NS", "COALINDIA.NS", "BAJAJFINSV.NS",
    "DIVISLAB.NS", "GRASIM.NS", "HDFCLIFE.NS", "CIPLA.NS", "SBILIFE.NS",
    "BRITANNIA.NS", "EICHERMOT.NS", "HEROMOTOCO.NS", "BAJAJ-AUTO.NS", "INDUSINDBK.NS",
    "BPCL.NS", "SHREECEM.NS", "DRREDDY.NS", "HINDALCO.NS", "ONGC.NS",
    "TATAMOTORS.NS", "APOLLOHOSP.NS", "M&M.NS", "UPL.NS", "ADANIPORTS.NS"
]

# -----------------------------
# Streamlit UI
# -----------------------------
st.set_page_config(page_title="NIFTY 50 Dashboard", layout="wide")
st.title("ðŸ“Š NIFTY 50 Stock Market Dashboard")

# Sidebar inputs
st.sidebar.header("Settings")
selected_stock = st.sidebar.selectbox("Choose a stock", nifty50_tickers)
start_date = st.sidebar.date_input("Start Date", datetime(2020, 1, 1))
end_date = st.sidebar.date_input("End Date", datetime.today())

# -----------------------------
# Data Download & Flatten
# -----------------------------
@st.cache_data
def load_data(tickers, start, end):
    data = yf.download(tickers, start=start, end=end, group_by="ticker")
    data.dropna(how="any", inplace=True)

    # Flatten columns (Ticker_Metric)
    data.columns = [f"{ticker}_{metric}" for ticker, metric in data.columns]
    return data

data = load_data(nifty50_tickers, start_date, end_date)

# -----------------------------
# Price Chart
# -----------------------------
close_col = f"{selected_stock}_Close"
st.subheader(f"Stock Price Trend - {selected_stock}")
st.line_chart(data[close_col])

# -----------------------------
# Daily Returns & Log Returns
# -----------------------------
returns = data.filter(like="_Close").pct_change().dropna()
log_returns = np.log(1 + returns).dropna()

st.subheader(f"Returns Analysis - {selected_stock}")
col1, col2 = st.columns(2)

with col1:
    st.line_chart(returns[close_col], height=300)
    st.caption("Daily Returns")

with col2:
    st.line_chart(log_returns[close_col], height=300)
    st.caption("Log Returns")

# -----------------------------
# Moving Averages
# -----------------------------
st.subheader(f"Moving Averages - {selected_stock}")
sma = data[close_col].rolling(window=20).mean()
ema = data[close_col].ewm(span=20, adjust=False).mean()

fig, ax = plt.subplots(figsize=(10, 4))
ax.plot(data[close_col], label="Close Price", alpha=0.8)
ax.plot(sma, label="20-day SMA", linestyle="--")
ax.plot(ema, label="20-day EMA", linestyle="--")
ax.legend()
st.pyplot(fig)

# -----------------------------
# Summary Statistics
# -----------------------------
st.subheader("Summary Statistics")
stats = pd.DataFrame({
    "Mean": returns.mean(),
    "Std Dev": returns.std(),
    "Volatility": returns.std() * np.sqrt(252)
}).round(4)
st.dataframe(stats)

# -----------------------------
# Correlation Heatmap
# -----------------------------
st.subheader("Correlation Heatmap (NIFTY 50 Returns)")
corr = returns.corr()

fig, ax = plt.subplots(figsize=(12, 8))
sns.heatmap(corr, cmap="coolwarm", ax=ax)
st.pyplot(fig)

st.success("âœ… Dashboard Ready! Use the sidebar to explore different stocks and periods.")